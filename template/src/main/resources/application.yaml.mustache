app:
  users:
    root: {{rootUser}}
    admins: {{adminUsers}}
  datasource:
    schema: {{module.name}}
  cors:
    origins: "http://localhost:*,https://*.{{project.domain}},https://{{project.domain}}"
  env:
    host: {{module.name}}-api.{{project.domain}}
  uris:
    public: "/,/app/**,/public/**,/pub/**,/v3/api-docs/**,/swagger-ui/**,/index.html,/error,/favicon.ico"
  {{#hasAuth0Config}}
  auth0:
    domain: ${AUTH0_DOMAIN:}
    audience: ${AUTH0_AUDIENCE:}
    jwt:
      role:
        claim:
          key: ${AUTH0_ROLE_CLAIM:https://{{module.name}}-api.{{project.domain}}.com/roles}
  {{/hasAuth0Config}}
  {{#hasOktaConfig}}
  okta:
    domain: ${OKTA_DOMAIN:}
    client-id: ${OKTA_CLIENT_ID:}
    issuer: ${OKTA_ISSUER:}
  {{/hasOktaConfig}}

spring:
  application:
    name: {{module.name}}-api
  {{#needRelationalDatabase}}
  datasource:
    url: ${SPRING_ENV_DATASOURCE_URL:jdbc:postgresql://localhost:5432/{{module.name}}}
    username: ${SPRING_ENV_DATASOURCE_USERNAME:{{module.name}}}
    password: ${SPRING_ENV_DATASOURCE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
  {{/needRelationalDatabase}}

springdoc:
  swagger-ui:
    defaultModelsExpandDepth: 0
    tagsSorter: alpha
    operationsSorter: method
    tryItOutEnabled: true
    filter: true
    doc-expansion: none

server:
  port: 8080

logging:
  level:
    {{javaPackageFull}}: INFO
    org.springframework: INFO
    {{#needRelationalDatabase}}
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    {{/needRelationalDatabase}}